/** 
 * 
 */
package au.edu.rmit.agtgrp.sarl.demos

import java.util.List
import java.util.ArrayList
import io.sarl.core.Logging

/** 
 * @author ssardina
 * 
 */
capacity Reporting {

	def agent_says(message : String, params : Object*)

	def agent_shouts(message : String, params : Object*)
}

skill ConsoleReporting implements Reporting {
	uses Logging

	var level : int
	val agentName : String

	new (agentName : String, l : int) {
		super() // Call the super's constructor
		this.level = l
		this.agentName = agentName
	}

	new (agentName : String) {
		super() // Call the super's constructor
		this.level = 0
		this.agentName = agentName
	}

	//	Check Varidic (varargs in java) arguments in SARL: http://www.sarl.io/docs/official/reference/general/FuncDecls.html
	private def info_with_agent(message : String, params : Object*) {

		// Extend params with the agent name (last argument)
		var params2 : List<Object> = new ArrayList<Object>(params.size + 1)
		params2.addAll(params)
		params2.add(agentName)

		info(String.format("**{%d}**: %s", params2.size - 1, message), params2.toArray())
	}

	def agent_says(message : String, params : Object*) {
		info_with_agent(message, params)
	}

	def agent_shouts(message : String, params : Object*) {
		info_with_agent(message.toUpperCase, params)
	}
}
